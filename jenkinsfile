pipeline {
    agent any

    tools {
        maven 'M2_HOME'

    }

    stages {
        stage('Git Checkout') {
            steps {
                echo 'Pulling'
                git branch: 'AminaMAMI-4TWIN1-G3', url: 'https://github.com/soulaymaabdenbi/4TWIN01-G3-ProductFlow.git'
            }
        }

        stage('Check and Start MySQL') {
            steps {
                script {
                    def status = sh(script: 'sudo -S systemctl is-active mysql', returnStatus: true)
                    if (status != 0) {
                        sh 'sudo -S systemctl start mysql'
                        status = sh(script: 'sudo -S systemctl is-active mysql', returnStatus: true)
                        if (status != 0) {
                            error("Failed to start MySQL service.")
                        }
                    }
                }
            }
        }

        stage('Maven Clean Compile') {
            steps {
                dir('DevOps_Project') {
                    echo 'Running Maven Clean and Compile'
                    sh 'mvn clean compile'
                }
            }
        }

        stage('Maven Install') {
            steps {
                dir('DevOps_Project') {
                    echo 'Running Maven Install'
                    sh 'mvn install'
                }
            }
        }


/*stage("SonarQube") {
    steps {
        dir('DevOps_Project') {
            withSonarQubeEnv('SonarQube') {
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar'
            }
        }
    }
}*/

stage('Deploy to Nexus') {
            steps {
                dir('DevOps_Project') {
                    script {
                         sh 'mvn deploy -e -X'

                    }
                }
            }
        }








        stage('DOCKER IMAGE') {

            steps {
             dir('DevOps_Project') {
             sh 'docker build -t aminamami-4twin1-g3-productflow:1.0.0 .'
                        }

            }
        }

        stage('DOCKER HUB') {
            steps {
                sh 'docker login -u mamiamina -p 234JFT3231'
                sh 'docker tag aminamami-4twin1-g3-productflow:1.0.0 mamiamina/aminamami-4twin1-g3-productflow:1.0.0'
                sh 'docker push mamiamina/aminamami-4twin1-g3-productflow:1.0.0'
            }
        }

        stage('DOCKER COMPOSE FrontEnd BackEnd MySql') {
            steps {
            sh 'sudo systemctl stop mysql'
            sh 'docker-compose up -d'


            }
        }
    }
}

